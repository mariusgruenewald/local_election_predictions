""" First, we start with a linear regression (Lower hanging fruits are always harvested first) """

# Import packages
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split 
import pandas as pd
import statsmodels.api as sm


# Start by importing data - one with incumbent(clean) the other without
dataframe = pd.read_excel(r'C:\Users\mariu\Desktop\Project\Historical Data\Data_BW_2009_2014.xlsx')
dataframe_2 = pd.read_excel(r'C:\Users\mariu\Desktop\Project\Historical Data\Data_clean.xlsx')


# Declare X and Y variable
X = dataframe[['place_list', 'place_list_sq', 'woman', 'woman_2009', 'woman_2014', 'doctor', 'year', 'CDU', 'SPD', 'Grüne', 'FDP', 'Linke', 'AfD', 'Piraten', 'artistocracy']]
y = dataframe['votes']

X_2 = dataframe_2[['place_list', 'place_list_sq', 'woman', 'woman_2009', 'woman_2014', 'incumbent', 'doctor', 'year', 'CDU', 'SPD', 'Grüne', 'FDP', 'Linke', 'AfD', 'Piraten', 'artistocracy']]
y_2 = dataframe_2['votes']


# Split dataset, not necessary for Linear regression, but for machine learning. So why not do it in the first place
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)


# Perform linear regression with the training data
lin_reg = LinearRegression()
lin_reg = lin_reg.fit(X_train,y_train)


# Check out coefficients
lin_reg.coef_, lin_reg.intercept_

# Check the accuracy of the model
lin_reg.score(X,y)


# Make predictions and see and how well we do 
y_pred = lin_reg.predict(X_test)
comparison = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})
comparison
